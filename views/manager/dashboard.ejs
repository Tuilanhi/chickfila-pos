<!-- views/success.ejs -->
<!DOCTYPE html>
<html>
  <head>
    <title>Manager Dashboard</title>
    <link
      rel="stylesheet"
      href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css"
    />
    <!-- load bulma css -->
    <link
      rel="stylesheet"
      href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css"
    />
    <!-- Bootstrap CSS -->
    <link
      rel="shortcut icon"
      href="https://www.freepnglogos.com/uploads/chick-fil-a-png-logo/chiefs-dominate-against-war-eagles-png-logo-7.png"
      type="image/x-icon"
    />
    <link
      href="https://fonts.googleapis.com/css?family=Open+Sans:300"
      rel="stylesheet"
      type="text/css"
    />
    <link
      rel="stylesheet"
      href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css"
      integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T"
      crossorigin="anonymous"
    />

    <style>
      body {
        font-family: Arial, Helvetica, sans-serif;
        margin: 0;
        padding: 0;
        height: 100vh;
        font-size: 15px;
      }

      .logo {
        position: relative;
        top: 2%;
        height: 40px;
        left: 48%;
      }

      .signout {
        font-size: 15px;
        text-align: right;
        color: white;
        background-color: red;
        border-radius: 10px;
        padding: 5px 10px;
        cursor: pointer;
        text-decoration: none;
      }

      .signout:hover {
        background-color: white;
        color: red;
        text-decoration: none;
      }

      /*Google Translate API*/

      #google_translate_element {
        position: absolute;
        top: 2%;
        right: 3%;
        color: transparent;
      }

      #google_translate_element a {
        display: none;
      }

      .goog-te-gadget {
        color: transparent !important;
      }

      .goog-te-gadget img {
        display: none !important;
      }

      body > .skiptranslate {
        display: none;
      }

      .dropdown {
        position: absolute;
        top: 2.5%;
        right: 13%;
      }

      .dropbtn {
        background-color: red;
        color: white;
        font-size: 16px;
        border: none;
        cursor: pointer;
        margin-right: 5px;
        border-radius: 3px;
      }

      .dropdown-content {
        display: none;
        position: absolute;
        z-index: 1;
        right: 10%;
        margin-top: 10px;
      }

      .dropdown:hover .dropdown-content {
        display: block;
      }

      .navbar {
        position: absolute;
        top: 1.5%;
        left: 1%;
      }

      .navbtn {
        background-color: red;
        color: white;
        font-size: 20px;
        padding: 0px 15px;
        border: none;
        cursor: pointer;
        border-radius: 10px;
      }

      /* Style the dropdown content (hidden by default) */
      .navbar-content {
        display: none;
        position: absolute;
        z-index: 1;
        top: 100%;
        left: 0;
      }

      /* Show the dropdown content on hover */
      .navbar:hover .navbar-content {
        display: block;
      }

      /* Style the links inside the dropdown */
      .navbar-content a {
        color: black;
        background-color: #f1f1f1;
        padding: 8px 15px;
        text-decoration: none;
        display: block;
        margin-top: 10px;
        border-radius: 10px;
      }

      /* Change the background color on hover */
      .navbar-content a:hover {
        background-color: red;
        color: #fff;
        border-radius: 10px;
      }

      /*Text Enlarge Button*/
      #font-changing {
        position: absolute;
        top: 3%;
        left: 6%;
      }
      #enlarge-button,
      #reset-button {
        color: white;
        background-color: red;
        border-radius: 10px;
        padding: 5px 10px;
        cursor: pointer;
        text-decoration: none;
        font-size: 13px;
      }

      #enlarge-button:hover,
      #reset-button:hover {
        background-color: white;
        color: red;
        text-decoration: none;
      }

      /*TABLE SECTION*/
      .table-container {
        display: flex;
        justify-content: space-between;
        margin-top: 100px;
      }

      .table-container > div:first-child {
        margin-left: 120px; /* add right margin to first child div (Menu table) */
      }

      .table-container > div:last-child {
        margin-right: 50px; /* add left margin to last child div (Inventory table) */
      }

      table {
        border-collapse: collapse;
        width: 700px;
        max-height: 300px;
        overflow-y: scroll;
        margin-bottom: 10px;
      }

      th,
      td {
        text-align: left;
        padding: 8px;
      }

      th {
        background-color: #f2f2f2;
        font-weight: bold;
      }

      tr:nth-child(even) {
        background-color: #f2f2f2;
      }

      .input-field {
        margin-right: 10px;
        margin-bottom: 10px;
        padding: 5px;
        border-radius: 5px;
        border: 1px solid #ccc;
        width: 300px;
      }

      .remove,
      .update {
        color: white;
        padding: 8px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        margin-bottom: 10px;
      }

      .update {
        background-color: #008cba;
      }

      .update:hover {
        background-color: #0072b1;
      }

      .remove {
        background-color: #f44336;
      }

      .remove:hover {
        background-color: #d32f2f;
      }

      .profile-container {
        display: flex;
        flex-direction: row;
        align-items: center;
        position: absolute;
        margin-top: 15px;
        left: 0.5%;
      }

      .profile {
        font-size: 15px;
        margin-right: 10px;
      }

      .error-message {
        color: red;
        font-weight: bold;
      }

      .format {
        font-style: italic;
        color: #777;
      }
    </style>

    <script type="text/javascript">
      function googleTranslateElementInit() {
        new google.translate.TranslateElement(
          {
            pageLanguage: "en",
            includedLanguages: "en,zh-CN,cs,da,fr,es,vi",
          },
          "google_translate_element"
        );
      }
    </script>
    <script
      type="text/javascript"
      src="//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"
    ></script>

    <script type="text/javascript">
      function enlargeText() {
        const elementsToEnlarge = document.querySelectorAll("body *");

        elementsToEnlarge.forEach((element) => {
          const currentFontSize = parseFloat(
            window.getComputedStyle(element).fontSize
          );
          const newFontSize = currentFontSize + 1;

          element.style.fontSize = `${newFontSize}px`;
        });
      }

      function resetText() {
        const elementsToReset = document.querySelectorAll("body *");

        elementsToReset.forEach((element) => {
          element.style.fontSize = null;
        });
      }
    </script>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script>
      $(document).ready(function () {
        $("#update-menu").click(function () {
          // Get the user input values
          const itemName = $('input[name="item-name"]').val();
          const itemCategory = $('input[name="item-category"]').val();
          const itemPrice = $('input[name="item-price"]').val();

          // Validate the input values
          if (!itemName) {
            showError(
              $('input[name="item-name"]'),
              "Please enter an item name"
            );
            return;
          }
          if (!itemCategory) {
            showError(
              $('input[name="item-category"]'),
              "Please enter an item category"
            );
            return;
          }
          const validCategories = [
            "Entrees",
            "Drinks",
            "Sides",
            "Treats",
            "Salads",
          ];
          if (!validCategories.includes(itemCategory)) {
            showError(
              $('input[name="item-category"]'),
              "Invalid item category"
            );
            return;
          }
          if (itemPrice < 0) {
            showError(
              $('input[name="item-price"]'),
              "Item price should not be less than 0"
            );
            return;
          }

          // Send an AJAX request to call the setItem function
          $.ajax({
            url: "/dashboard",
            type: "POST",
            data: {
              itemName: itemName,
              itemCategory: itemCategory,
              itemPrice: itemPrice,
            },
            success: function (response) {
              // Reload the page to update the menu table
              location.reload();
            },
            error: function (xhr, status, error) {
              console.error(error);
            },
          });
        });

        $("#remove-menu").click(function () {
          const itemName = $('input[name="item-name"]').val();

          $.ajax({
            url: "/dashboard",
            type: "POST",
            data: { itemName: itemName },
            success: function (response) {
              location.reload();
            },
            error: function (xhr, status, error) {
              console.error(error);
            },
          });
        });

        $("#update-ingredient").click(function () {
          // Get the user input values
          const ingredient = $('input[name="ingredient"]').val();
          const quantity = $('input[name="quantity"]').val();
          const type = $('input[name="type"]').val();
          const unit = $('input[name="unit"]').val();

          // Validate the input values
          if (!ingredient) {
            showError(
              $('input[name="ingredient"]'),
              "Please enter an ingredient name"
            );
            return;
          }
          if (!quantity) {
            showError(
              $('input[name="quantity"]'),
              "Please enter an item quantity"
            );
            return;
          }
          if (!type) {
            showError($('input[name="type"]'), "Please enter an item type");
            return;
          }
          if (!unit) {
            showError($('input[name="unit"]'), "Please enter an item unit");
            return;
          }

          const validType = ["sauce", "food", "utensil", "drink"];

          if (!validType.includes(type)) {
            showError($('input[name="type"]'), "Invalid item type");
            return;
          }

          const validUnit = ["pieces", "cups"];

          if (!validUnit.includes(unit)) {
            showError($('input[name="unit"]'), "Invalid item unit");
            return;
          }

          if (quantity < 0) {
            showError(
              $('input[name="quantity"]'),
              "Item quantity should not be less than 0"
            );
            return;
          }

          // Send an AJAX request to call the setItem function
          $.ajax({
            url: "/dashboard",
            type: "POST",
            data: {
              ingredient: ingredient,
              quantity: quantity,
              type: type,
              unit: unit,
            },
            success: function (response) {
              // Reload the page to update the menu table
              location.reload();
            },
            error: function (xhr, status, error) {
              console.error(error);
            },
          });
        });

        $("#remove-ingredient").click(function () {
          const ingredient = $('input[name="ingredient"]').val();

          $.ajax({
            url: "/dashboard",
            type: "POST",
            data: { ingredient: ingredient },
            success: function (response) {
              location.reload();
            },
            error: function (xhr, status, error) {
              console.error(error);
            },
          });
        });
      });

      // Add a helper function to show the error message
      function showError(inputField, message) {
        const errorMessage = inputField.next(".error-message");
        errorMessage.text(message);
        errorMessage.addClass("error-message");
      }
    </script>
  </head>
  <body>
    <img src="../images/Chick-fil-A-Logo.png" class="logo" />
    <!---Google Translate Section --->
    <div id="google_translate_element"></div>

    <!---Enlarge Text Button--->
    <div id="font-changing">
      <a id="reset-button" onClick="resetText()">Reset Text</a>
      <a id="enlarge-button" onClick="enlargeText()">Enlarge Text</a>
    </div>

    <!---DROP DOWN MENU--->
    <div class="navbar">
      <button class="navbtn">&#9776;</button>
      <div class="navbar-content" id="myDropdown">
        <a href="/newMenuItem">New Menu Item</a>
        <a href="/salesReport">Sales Report</a>
        <a href="/XReport">X Report</a>
        <a href="/ZReport">Z Report</a>
        <a href="/excessReport">Excess Report</a>
        <a href="/restockReport">Restock Report</a>
        <a href="/customer">Customer View</a>
      </div>
    </div>

    <!---TABLE SECTION--->
    <div class="table-container">
      <div>
        <h2>Menu</h2>
        <table>
          <thead>
            <tr>
              <th>Name</th>
              <th>Category</th>
              <th>Price</th>
            </tr>
          </thead>
          <tbody>
            <% for (let i = 0; i < menuItems.length; i++) { %>
            <tr>
              <td><%= menuItems[i].item %></td>
              <td><%= menuItems[i].category %></td>
              <td>$<%= menuItems[i].price.toFixed(2) %></td>
            </tr>
            <% } %>
          </tbody>
        </table>
        <p class="format">Category: Entrees, Sides, Salads, Treats, Drinks</p>
        <input
          type="text"
          name="item-name"
          placeholder="Item Name"
          class="input-field"
        />
        <input
          type="text"
          name="item-category"
          placeholder="Item Category"
          class="input-field"
        />
        <div class="error-message"></div>
        <input
          type="number"
          name="item-price"
          placeholder="Item Price"
          class="input-field"
        />
        <div class="error-message"></div>
        <!-- Add the error message element -->
        <div id="menu-buttons">
          <button id="remove-menu" class="remove">Remove Menu</button>
          <button id="update-menu" class="update">Update Menu</button>
        </div>
      </div>
      <div>
        <h2>Inventory</h2>
        <table>
          <thead>
            <tr>
              <th>Ingredient</th>
              <th>Quantity</th>
              <th>Type</th>
              <th>Unit</th>
            </tr>
          </thead>
          <tbody>
            <% for (let i = 0; i < inventoryItems.length; i++) { %>
            <tr>
              <td><%= inventoryItems[i].ingredient %></td>
              <td><%= inventoryItems[i].quantity %></td>
              <td><%= inventoryItems[i].type %></td>
              <td><%= inventoryItems[i].unit %></td>
            </tr>
            <% } %>
          </tbody>
        </table>
        <p class="format">Type: sauce,food,utensil,drink</p>
        <p class="format">Unit: pieces, cups</p>
        <input
          type="text"
          name="ingredient"
          placeholder="Ingredient"
          class="input-field"
        />
        <div class="error-message"></div>
        <input
          type="number"
          name="quantity"
          placeholder="Quantity"
          class="input-field"
        />
        <div class="error-message"></div>
        <input type="text" name="type" placeholder="Type" class="input-field" />
        <div class="error-message"></div>
        <input type="text" name="unit" placeholder="Unit" class="input-field" />
        <div class="error-message"></div>
        <div id="inventory-buttons">
          <button id="remove-ingredient" class="remove">Remove Item</button>
          <button id="update-ingredient" class="update">Update Item</button>
        </div>
      </div>
    </div>

    <div class="profile-container">
      <div class="profile">
        <strong>Name</strong>: <%= userProfile.displayName %> <br />
        <strong>Role</strong>: <%= userRole %> <br />
      </div>
      <a href="/logout" class="signout">Sign Out</a>
    </div>
  </body>
</html>
